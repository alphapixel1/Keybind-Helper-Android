package com.example.keybindhelper.dto;

import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.ForeignKey;
import androidx.room.Ignore;
import androidx.room.PrimaryKey;

import com.example.keybindhelper.RecyclerViewAdapters.KeybindAdapter;
import com.example.keybindhelper.dao.CurrentProjectManager;
import com.example.keybindhelper.dao.DatabaseManager;

import org.json.JSONException;
import org.json.JSONObject;


@Entity(foreignKeys = {@ForeignKey(entity = Group.class,
        parentColumns = "id",
        childColumns = "groupID",
        onDelete = ForeignKey.CASCADE)
})
public class Keybind{
    @PrimaryKey(autoGenerate = true)
    public long id;

    @ColumnInfo
    public long groupID;

    @ColumnInfo
    public String name,kb1="",kb2="",kb3="";

    @ColumnInfo
    public int index;

    /**
     * Blank for Room
     */
    public Keybind(){}

    /**
     * Used Exclusively for cloning keybinds
     * @param groupID
     * @param name
     * @param kb1
     * @param kb2
     * @param kb3
     */
    public Keybind(long groupID,String name,String kb1,String kb2,String kb3){
        this.groupID=groupID;
        this.name=name;
        this.kb1=kb1;
        this.kb2=kb2;
        this.kb3=kb3;
    }


    /**
     * Tells database manager to update the keybind row
     */
    public void updateDB() {
        DatabaseManager.db.update(this);
    }
    @Ignore
    public Group group;
    @Ignore
    public KeybindAdapter.KeybindViewHolder viewHolder;

    /**
     * Clones the keybind
     * @param sameName Should name be autogenerated and unique
     * @return cloned keybind
     */
    public Keybind Clone(boolean sameName) {

        String newName=name;
        if(!sameName) {
            int i = 1;
            while (!CurrentProjectManager.CurrentProject.isKeybindNameAvailable(name + " (" + i + ")"))
                i++;
            newName=name + " (" + i + ")";
        }
        Keybind ret=new Keybind(groupID,newName,kb1,kb2,kb3);
        return ret;
    }

    public JSONObject getJSONObject() throws JSONException {
        JSONObject ret=new JSONObject();
        ret.put("keybindName",name);
        ret.put("kb1",kb1);
        ret.put("kb2",kb2);
        ret.put("kb3",kb3);
        return ret;
    }


}
